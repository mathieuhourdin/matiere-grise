import{a as f,u as v}from"./useThoughtOutput-514797d1.js";import{A as y,d,r as h,l as b,B as w,o as n,c as i,h as _,w as P,f as e,t as a,F as x,p as T,m as k}from"./index-de4e0cfe.js";const{createThoughtOutput:C}=f(),D=()=>({title:"",description:"",content:"",publishing_state:"drft",image_url:"",output_type:"pblm",progress:0,potential_improvements:"",maturing_state:""}),$=s=>s,B=async()=>(await y.get("/problems")).data.map(o=>$(o));function F(){return{newProblem:D,getProblems:B,createProblem:C}}const I={class:"border shadow-xl rounded m-2 p-4 h-72 w-60"},L={class:"max-h-full"},A=["src"],N={class:"h-full"},O={class:"mb-2"},R={class:"text-2xs italic",style:{"margin-top":"-8px"}},V={class:"text-2xs mb-auto"},q={class:"flex mt-2"},S={class:"text-2xs italic mt-auto"},U={class:"ml-auto text-2xs underline"},j=d({__name:"ProblemCard",props:{problem:{}},setup(s){const o=s,c=t=>new Date(t.split(".")[0]).toLocaleString("fr-FR",{hour:"numeric",weekday:"short",day:"numeric",month:"short",year:"2-digit"}),l=t=>t.length>200?t.slice(0,150)+"...":t,r=h([]),{getThoughtInputUsagesForThoughtOutput:u}=v(),p=async()=>{r.value=await u(o.problem.id)};return b(()=>p()),(t,m)=>{const g=w("router-link");return n(),i("div",I,[_(g,{to:"/thought_outputs/"+t.problem.id},{default:P(()=>[e("div",L,[e("img",{class:"h-28 mx-auto mb-4",src:t.problem.image_url},null,8,A),e("div",N,[e("div",O,a(t.problem.title),1),e("div",R,a(t.problem.owner_id),1),e("div",V,a(l(t.problem.description)),1),e("div",q,[e("div",S,a(c(t.problem.created_at)),1),e("div",U,a(r.value.length)+" inputs",1)])])])]),_:1},8,["to"])])}}}),E=e("hr",{class:"border-top border-slate-800 border-dashed my-1"},null,-1),H={class:"flex overflow-scroll"},M=d({__name:"CategoryProblemsCarousel",props:{problemsList:{},categoryTitle:{}},setup(s){return(o,c)=>(n(),i("div",null,[e("div",null,a(o.categoryTitle),1),E,e("div",H,[(n(!0),i(x,null,T(o.problemsList,(l,r)=>(n(),i("div",{key:r},[_(j,{problem:l},null,8,["problem"])]))),128))])]))}}),W={class:"m-4"},J=d({__name:"ProblemsView",setup(s){const o=k(),{getProblems:c,newProblem:l,createProblem:r}=F(),u=h([]),p=async()=>{const t=l(),m=await r(t);o.push({path:"/thought_outputs/"+m.id,query:{editing:!0}})};return b(async()=>u.value=await c()),(t,m)=>(n(),i("div",null,[e("div",W,[e("div",{class:"underline italic",onClick:p},"Ajouter une problématique"),_(M,{"category-title":"Histoire et sociétés","problems-list":u.value},null,8,["problems-list"])])]))}});export{J as default};
